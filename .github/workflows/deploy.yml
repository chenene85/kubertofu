name: Deploy with OpenTofu

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      docker:
        image: docker:dind
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker (Reinstalación Limpia y Robusta)
        run: |
          # 1. Limpiar cualquier instalación de Docker o containerd existente
          echo "Deteniendo servicios de Docker y containerd..."
          sudo systemctl stop docker || true
          sudo systemctl stop containerd || true
          sudo systemctl stop docker.socket || true
          
          echo "Purgando paquetes de Docker y containerd existentes..."
          sudo apt-get purge -y docker-ce docker-ce-cli containerd.io docker.io runc || true
          sudo apt-get autoremove -y || true
          
          echo "Eliminando directorios residuales de Docker..."
          sudo rm -rf /var/lib/docker || true
          sudo rm -rf /etc/docker || true
          sudo rm -rf /var/run/docker || true
          sudo rm -rf /var/lib/containerd || true
          sudo rm -rf /etc/containerd || true
          
          # 2. Actualizar la caché de APT y asegurar las dependencias básicas
          echo "Actualizando la caché de APT y asegurando dependencias básicas..."
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg lsb-release
          
          # 3. Añadir la clave GPG oficial de Docker
          echo "Añadiendo la clave GPG oficial de Docker..."
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          
          # 4. Configurar el repositorio de Docker
          echo "Configurando el repositorio oficial de Docker..."
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            
          # 5. Instalar Docker Engine
          echo "Instalando Docker Engine desde el repositorio oficial..."
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          
          # 6. Iniciar el servicio de Docker
          echo "Iniciando el servicio de Docker..."
          sudo systemctl start docker
          
          # 7. Agregar el usuario al grupo docker
          echo "Agregando el usuario '$USER' al grupo 'docker'..."
          sudo usermod -aG docker $USER
          newgrp docker # Esto no tendrá efecto inmediato en el mismo script, pero es buena práctica
          
          # 8. Verificar la instalación
          echo "Verificando la instalación de Docker..."
          docker --version
          docker info
          echo "¡Configuración de Docker completada!"
    
      - name: Install OpenTofu
        run: |
          # Instalar OpenTofu usando snap
          sudo snap install --classic opentofu
          tofu --version

      - name: Install kubectl and Minikube
        run: |
          # Kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

          # Minikube
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube

          # Configuración especial para CI
          export MINIKUBE_IN_STYLE=false
          export CHANGE_MINIKUBE_NONE_USER=true
          minikube start --driver=docker --force --wait=all
          minikube update-context

          # Verificación
          kubectl cluster-info
          minikube status

      - name: Setup Kubeconfig
        run: |
          mkdir -p ~/.kube
          minikube kubectl -- config view --flatten > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Terraform Init
        run: tofu init

      - name: Terraform Apply
        run: tofu apply -auto-approve

      - name: Verify Deployment
        run: |
          kubectl get all -A
          minikube service list --url
