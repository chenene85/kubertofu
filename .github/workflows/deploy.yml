# ... (pasos anteriores como Checkout code, Install OpenTofu) ...

      - name: Install kubectl and Minikube
        run: |
          # Kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client

          # Minikube
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube version

          echo "Starting Minikube..."
          # Configuración especial para CI
          export MINIKUBE_IN_STYLE=false
          export CHANGE_MINIKUBE_NONE_USER=true # Necesario para driver=docker en CI sin root
          minikube start --driver=docker --force --wait=all --alsologtostderr -v=2 # -v=2 para más logs, --wait=all

          echo "Updating Minikube context..."
          minikube update-context

          echo "Minikube status:"
          minikube status

          echo "Kubectl cluster-info:"
          kubectl cluster-info

          echo "Waiting for Kubernetes API server to be fully responsive..."
          # Un chequeo adicional para asegurar que la API está lista
          timeout 30s bash -c 'until kubectl get --raw=/readyz; do sleep 1; done'


      - name: Setup Kubeconfig and Debug
        run: |
          echo "Ensuring .kube directory exists..."
          mkdir -p ${{ runner.homedir }}/.kube

          echo "Generating kubeconfig..."
          minikube kubectl -- config view --flatten > ${{ runner.homedir }}/.kube/config
          chmod 600 ${{ runner.homedir }}/.kube/config

          echo "Kubeconfig content (${{ runner.homedir }}/.kube/config):"
          cat ${{ runner.homedir }}/.kube/config

          echo "Current kubectl context with generated config:"
          KUBECONFIG=${{ runner.homedir }}/.kube/config kubectl config current-context

          echo "Testing kubectl connectivity with generated config:"
          KUBECONFIG=${{ runner.homedir }}/.kube/config kubectl get nodes
          KUBECONFIG=${{ runner.homedir }}/.kube/config kubectl get pods -A

      - name: Terraform Init
        env: # Asegurar que KUBECONFIG también está disponible aquí si es necesario
          KUBECONFIG: ${{ runner.homedir }}/.kube/config
        run: tofu init -upgrade # -upgrade para asegurar compatibilidad de providers

      - name: Terraform Apply
        env:
          KUBECONFIG: ${{ runner.homedir }}/.kube/config # MUY IMPORTANTE
          TF_LOG: DEBUG # Para obtener logs detallados de Terraform/OpenTofu
        run: tofu apply -auto-approve
